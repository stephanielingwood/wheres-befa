# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: airplanes

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs6.10
  memorySize: 512
  timeout: 30
  versionFunctions: false
#  stage: dev
  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource: 'arn:aws:dynamodb:us-east-1:*:*'
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  create:
    handler: handler.postAirplane
    events:
      - http:
          path: airplanes
          method: post
          cors: true
  list:
    handler: handler.getAirplanes
    events:
      - http:
          path: airplanes
          method: get
          cors: true

# CloudFormation resource templates
resources:
  Resources:
    WheresBEFAAirplanesTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        TableName: 'WheresBEFAAirplanesTable'
        AttributeDefinitions:
          -
            AttributeName: 'tailNumber'
            AttributeType: S
        KeySchema:
          -
            AttributeName: 'tailNumber'
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: '1'
          WriteCapacityUnits: '1'

custom:
  dynamodb:
    start:
      port: 8000
      migrate: true
      seed: true
      # uncomment for already-running local dynamodb
      # noStart: true
    # seed table with default airplane data
    seed:
      domain:
        sources:
          - table: 'WheresBEFAAirplanesTable'
            sources: [./airplaneSeedData.json]

plugins:
  - serverless-dynamodb-local
  - serverless-offline
