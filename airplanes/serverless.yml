service: airplanes

provider:
  name: aws
  runtime: nodejs6.10
  memorySize: 512
  timeout: 30
  versionFunctions: false
#  stage: dev
  region: us-east-1
  environment:
    STAGE: ${opt:stage}

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource: 'arn:aws:dynamodb:us-east-1:*:*'

functions:
  getAll:
    handler: handler.getAllAirplanes
    events:
      - http:
          path: airplanes
          method: get
          cors: true
  post:
    handler: handler.postAirplane
    events:
      - http:
          path: airplanes
          method: post
          cors: true


# CloudFormation resource templates
resources:
  Resources:
    WheresBEFAAirplanesTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        TableName: 'WheresBEFAAirplanesTable-${opt:stage}'
        AttributeDefinitions:
          -
            AttributeName: 'tailNumber'
            AttributeType: S
        KeySchema:
          -
            AttributeName: 'tailNumber'
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: '1'
          WriteCapacityUnits: '1'

custom:
  dynamodb:
    start:
      port: 8000
      # migrate: true
      seed: true
      # uncomment for already-running local dynamodb
      noStart: true
    # seed table with default airplane data
    seed:
      domain:
        sources:
          - table: 'WheresBEFAAirplanesTable-${opt:stage}'
            sources: [./airplaneSeedData.json]

plugins:
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-mocha-plugin
